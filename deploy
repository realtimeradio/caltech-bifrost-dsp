#!/bin/bash
# Distinct ${CONDA_ENV} servers
# - $GPU_SERVER_HOST_PREFIX (hostname prefix for machines where etcd services need installing and running)
# - elsewhere (just install the control libraries)

GPU_SERVER_HOST_PREFIX=lxdlwagpu
# Install in this conda environment on GPU nodes:
CONDA_ENV_GPU=casa
# Install in this conda environment everywhere else
CONDA_ENV_DEFAULT=deployment
# Install etcd services in this user's /home/$SERVICE_USER/.config/systemd/user
SERVICE_USER=pipeline

# setup
NAME="caltech-bifrost-dsp"
CONTROL_SUBDIR="pipeline-control"
PIPELINE_SUBDIR="pipeline"
DATE=$(date --iso-8601=seconds)
LOG=~/deploy_${NAME}_${DATE}.log

set -ex >> $LOG 2>>$LOG

rm ~/deploy_$NAME_*.log >> $LOG 2>>$LOG  # clean up old logs
echo $HOSTNAME >> $LOG 2>>$LOG
echo $PWD >> $LOG 2>>$LOG  # should be base of code repo
whoami >> $LOG 2>>$LOG  # should be user pipeline (or ubuntu?)
echo "$DATE" >> $LOG 2>>$LOG
REPO_TOP=$PWD

if [[ ${HOSTNAME} = ${GPU_SERVER_HOST_PREFIX}* ]]; then
    echo "This server is a GPU host" >> $LOG
    IS_GPU=yes
    CONDA_ENV=${CONDA_ENV_GPU}
else
    echo "This server is _NOT_ a GPU host" >> $LOG
    IS_GPU=no
    CONDA_ENV=${CONDA_ENV_DEFAULT}
fi


if [[ ${IS_GPU} = yes ]]; then
    echo "Installing correlator pipeline" >> $LOG
    # Install full pipeline. xgpu / bifrost / etc
    # For now, assume xgpu is installed
    # bifrost--
    cd ${REPO_TOP}
    conda run -n ${CONDA_ENV} make >> $LOG 2>>$LOG
    conda run -n ${CONDA_ENV} make install >> $LOG 2>>$LOG
    # LWA352 pipeline
    cd ${PIPELINE_SUBDIR}
    conda run -n ${CONDA_ENV} which python >> $LOG 2>>$LOG
    conda run -n ${CONDA_ENV} git describe >> $LOG 2>>$LOG
    conda run -n ${CONDA_ENV} pip install -r requirements.txt >> $LOG 2>>$LOG
    conda run -n ${CONDA_ENV} python setup.py install >> $LOG 2>>$LOG
    # TODO: etcd services
fi

echo "Installing control software" >> $LOG
cd ${REPO_TOP}
cd ${CONTROL_SUBDIR}
conda run -n ${CONDA_ENV} which python >> $LOG 2>>$LOG
conda run -n ${CONDA_ENV} git describe >> $LOG 2>>$LOG
conda run -n ${CONDA_ENV} pip install -r requirements.txt >> $LOG 2>>$LOG
conda run -n ${CONDA_ENV} python setup.py install >> $LOG 2>>$LOG
